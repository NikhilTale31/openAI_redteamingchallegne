# Translations template for Jupyter.
# Copyright (C) 2017 ORGANIZATION
# This file is distributed under the same license as the Jupyter project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Jupyter VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2017-08-25 02:53-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.0\n"

#: notebook/serverapp.py:49
msgid "The Jupyter Notebook requires tornado >= 4.0"
msgstr " tornado  >= 4.0"

#: notebook/serverapp.py:53
msgid "The Jupyter Notebook requires tornado >= 4.0, but you have < 1.1.0"
msgstr " tornado  >= 4.0,  < 1.1.0"

#: notebook/serverapp.py:55
#, python-format
msgid "The Jupyter Notebook requires tornado >= 4.0, but you have %s"
msgstr " tornado  >= 4.0,  %s"

#: notebook/serverapp.py:206
#, python-format
msgid "Alternatively use `%s` when working on the notebook's Javascript and LESS"
msgstr "notebookJavaScriptLESS `%s` "

#: notebook/serverapp.py:385
msgid "List currently running notebook servers."
msgstr "Notebook."

#: notebook/serverapp.py:389
msgid "Produce machine-readable JSON list output."
msgstr "JSON."

#: notebook/serverapp.py:391
msgid "Produce machine-readable JSON object on each line of output."
msgstr ""

#: notebook/serverapp.py:395
msgid "If True, the output will be a JSON list of objects, one per active notebook server, each with the details from the relevant server info file."
msgstr "JSON"

#: notebook/serverapp.py:399
msgid "If True, each line of output will be a JSON object with the details from the server info file. For a JSON list output, see the NbserverListApp.jsonlist configuration value"
msgstr "JSONJSONNbserverListAppjsonlist"

#: notebook/serverapp.py:425
msgid "Don't open the notebook in a browser after startup."
msgstr "."

#: notebook/serverapp.py:429
msgid "DISABLED: use %pylab or %matplotlib in the notebook to enable matplotlib."
msgstr ""

#: notebook/serverapp.py:445
msgid "Allow the notebook to be run from root user."
msgstr "notebookroot."

#: notebook/serverapp.py:476
msgid ""
"The Jupyter HTML Notebook.\n"
"    \n"
"    This launches a Tornado based HTML Notebook Server that serves up an HTML5/Javascript Notebook client."
msgstr "The Jupyter HTML Notebook.\n \n tornadoHTMLhtml5/javascript"

#: notebook/serverapp.py:546
msgid "Set the Access-Control-Allow-Credentials: true header"
msgstr "Access-Control-Allow-Credentials:true"

#: notebook/serverapp.py:550
msgid "Whether to allow the user to run the notebook as root."
msgstr "notebookroot."

#: notebook/serverapp.py:554
msgid "The default URL to redirect to from `/`"
msgstr " `/` URL "

#: notebook/serverapp.py:558
msgid "The IP address the notebook server will listen on."
msgstr "notebookIP."

#: notebook/serverapp.py:571
#, python-format
msgid ""
"Cannot bind to localhost, using 127.0.0.1 as default ip\n"
"%s"
msgstr "localhost, 127.0.0.1IP \n %s"

#: notebook/serverapp.py:585
msgid "The port the notebook server will listen on."
msgstr "notebookIP."

#: notebook/serverapp.py:589
msgid "The number of additional ports to try if the specified port is not available."
msgstr "."

#: notebook/serverapp.py:593
msgid "The full path to an SSL/TLS certificate file."
msgstr "SSL/TLS ."

#: notebook/serverapp.py:597
msgid "The full path to a private key file for usage with SSL/TLS."
msgstr "SSL/TLS ."

#: notebook/serverapp.py:601
msgid "The full path to a certificate authority certificate for SSL/TLS client authentication."
msgstr "ssl/tls."

#: notebook/serverapp.py:605
msgid "The file where the cookie secret is stored."
msgstr "cookie."

#: notebook/serverapp.py:634
#, python-format
msgid "Writing notebook server cookie secret to %s"
msgstr "notebook cookie %s"

#: notebook/serverapp.py:641
#, python-format
msgid "Could not set permissions on %s"
msgstr " %s "

#: notebook/serverapp.py:646
msgid ""
"Token used for authenticating first-time connections to the server.\n"
"\n"
"        When no password is enabled,\n"
"        the default is to generate a new, random token.\n"
"\n"
"        Setting to an empty string disables authentication altogether, which is NOT RECOMMENDED.\n"
"        "
msgstr ""

#: notebook/serverapp.py:656
msgid ""
"One-time token used for opening a browser.\n"
"        Once used, this token cannot be used again.\n"
"        "
msgstr ""

#: notebook/serverapp.py:732
msgid ""
"Specify Where to open the notebook on startup. This is the\n"
"        `new` argument passed to the standard library method `webbrowser.open`.\n"
"        The behaviour is not guaranteed, but depends on browser support. Valid\n"
"        values are:\n"
"            2 opens a new tab,\n"
"            1 opens a new window,\n"
"            0 opens in an existing window.\n"
"        See the `webbrowser.open` documentation for details.\n"
"        "
msgstr ""

#: notebook/serverapp.py:752
msgid "Supply overrides for the tornado.web.Application that the Jupyter notebook uses."
msgstr ""

#: notebook/serverapp.py:756
msgid ""
"\n"
"        Set the tornado compression options for websocket connections.\n"
"\n"
"        This value will be returned from :meth:`WebSocketHandler.get_compression_options`.\n"
"        None (default) will disable compression.\n"
"        A dict (even an empty one) will enable compression.\n"
"\n"
"        See the tornado docs for WebSocketHandler.get_compression_options for details.\n"
"        "
msgstr ""

#: notebook/serverapp.py:767
msgid "Supply overrides for terminado. Currently only supports \"shell_command\"."
msgstr ""

#: notebook/serverapp.py:770
msgid "Extra keyword arguments to pass to `set_secure_cookie`. See tornado's set_secure_cookie docs for details."
msgstr ""

#: notebook/serverapp.py:774
msgid ""
"Supply SSL options for the tornado HTTPServer.\n"
"            See the tornado docs for details."
msgstr ""

#: notebook/serverapp.py:778
msgid "Supply extra arguments that will be passed to Jinja environment."
msgstr ""

#: notebook/serverapp.py:782
msgid "Extra variables to supply to jinja templates when rendering."
msgstr ""

#: notebook/serverapp.py:838
msgid "Path to search for custom.js, css"
msgstr ""

#: notebook/serverapp.py:850
msgid ""
"Extra paths to search for serving jinja templates.\n"
"\n"
"        Can be used to override templates from notebook.templates."
msgstr ""

#: notebook/serverapp.py:861
msgid "extra paths to look for Javascript notebook extensions"
msgstr ""

#: notebook/serverapp.py:906
#, python-format
msgid "Using MathJax: %s"
msgstr ""

#: notebook/serverapp.py:909
msgid "The MathJax.js configuration file that is to be used."
msgstr ""

#: notebook/serverapp.py:914
#, python-format
msgid "Using MathJax configuration file: %s"
msgstr ""

#: notebook/serverapp.py:920
msgid "The notebook manager class to use."
msgstr ""

#: notebook/serverapp.py:926
msgid "The kernel manager class to use."
msgstr ""

#: notebook/serverapp.py:932
msgid "The session manager class to use."
msgstr ""

#: notebook/serverapp.py:938
msgid "The config manager class to use"
msgstr ""

#: notebook/serverapp.py:959
msgid "The login handler class to use."
msgstr ""

#: notebook/serverapp.py:966
msgid "The logout handler class to use."
msgstr ""

#: notebook/serverapp.py:970
msgid "Whether to trust or not X-Scheme/X-Forwarded-Proto and X-Real-Ip/X-Forwarded-For headerssent by the upstream reverse proxy. Necessary if the proxy handles SSL"
msgstr ""

#: notebook/serverapp.py:982
msgid ""
"\n"
"        DISABLED: use %pylab or %matplotlib in the notebook to enable matplotlib.\n"
"        "
msgstr ""

#: notebook/serverapp.py:994
msgid "Support for specifying --pylab on the command line has been removed."
msgstr ""

#: notebook/serverapp.py:996
msgid "Please use `%pylab{0}` or `%matplotlib{0}` in the notebook itself."
msgstr ""

#: notebook/serverapp.py:1001
msgid "The directory to use for notebooks and kernels."
msgstr ""

#: notebook/serverapp.py:1024
#, python-format
msgid "No such notebook dir: '%r'"
msgstr ": '%r' "

#: notebook/serverapp.py:1046
msgid "Dict of Python modules to load as notebook server extensions.Entry values can be used to enable and disable the loading of the extensions. The extensions will be loaded in alphabetical order."
msgstr "Python"

#: notebook/serverapp.py:1055
msgid "Reraise exceptions encountered loading server extensions?"
msgstr "?"

#: notebook/serverapp.py:1058
msgid ""
"(msgs/sec)\n"
"        Maximum rate at which messages can be sent on iopub before they are\n"
"        limited."
msgstr ""

#: notebook/serverapp.py:1062
msgid ""
"(bytes/sec)\n"
"        Maximum rate at which stream output can be sent on iopub before they are\n"
"        limited."
msgstr ""

#: notebook/serverapp.py:1066
msgid ""
"(sec) Time window used to \n"
"        check the message and data rate limits."
msgstr "(sec) \n ."

#: notebook/serverapp.py:1077
#, python-format
msgid "No such file or directory: %s"
msgstr ": %s"

#: notebook/serverapp.py:1147
msgid "Notebook servers are configured to only be run with a password."
msgstr "."

#: notebook/serverapp.py:1148
msgid "Hint: run the following command to set a password"
msgstr ": "

#: notebook/serverapp.py:1149
msgid "\t$ python -m notebook.auth password"
msgstr ""

#: notebook/serverapp.py:1187
#, python-format
msgid "The port %i is already in use, trying another port."
msgstr " %i , ."

#: notebook/serverapp.py:1190
#, python-format
msgid "Permission to listen on port %i denied"
msgstr " %i "

#: notebook/serverapp.py:1199
msgid "ERROR: the notebook server could not be started because no available port could be found."
msgstr ": . "

#: notebook/serverapp.py:1205
msgid "[all ip addresses on your system]"
msgstr "[IP]"

#: notebook/serverapp.py:1229
#, python-format
msgid "Terminals not available (error was %s)"
msgstr "(: %s)"

#: notebook/serverapp.py:1265
msgid "interrupted"
msgstr ""

#: notebook/serverapp.py:1267
msgid "y"
msgstr ""

#: notebook/serverapp.py:1268
msgid "n"
msgstr ""

#: notebook/serverapp.py:1269
#, python-format
msgid "Shutdown this notebook server (%s/[%s])? "
msgstr " (%s/[%s])"

#: notebook/serverapp.py:1275
msgid "Shutdown confirmed"
msgstr ""

#: notebook/serverapp.py:1279
msgid "No answer for 5s:"
msgstr "5s "

#: notebook/serverapp.py:1280
msgid "resuming operation..."
msgstr "..."

#: notebook/serverapp.py:1288
#, python-format
msgid "received signal %s, stopping"
msgstr " %s, "

#: notebook/serverapp.py:1344
#, python-format
msgid "Error loading server extension %s"
msgstr " %s "

#: notebook/serverapp.py:1375
#, python-format
msgid "Shutting down %d kernel"
msgid_plural "Shutting down %d kernels"
msgstr[0] " %d "
msgstr[1] " %d "

#: notebook/serverapp.py:1383
#, python-format
msgid "%d active kernel"
msgid_plural "%d active kernels"
msgstr[0] "%d "
msgstr[1] "%d "

#: notebook/serverapp.py:1387
#, python-format
msgid ""
"The Jupyter Notebook is running at:\n"
"%s"
msgstr ": %s"

#: notebook/serverapp.py:1434
msgid "Running as root is not recommended. Use --allow-root to bypass."
msgstr "root.--allow-root."

#: notebook/serverapp.py:1440
msgid "Use Control-C to stop this server and shut down all kernels (twice to skip confirmation)."
msgstr "control-c()."

#: notebook/serverapp.py:1442
msgid "Welcome to Project Jupyter! Explore the various tools available and their corresponding documentation. If you are interested in contributing to the platform, please visit the communityresources section at http://jupyter.org/community.html."
msgstr "Jupyter! . ,http://jupyter.org/community.html community resources."

#: notebook/serverapp.py:1453
#, python-format
msgid "No web browser found: %s."
msgstr "web: %s."

#: notebook/serverapp.py:1458
#, python-format
msgid "%s does not exist"
msgstr "%s "

#: notebook/serverapp.py:1492
msgid "Interrupted..."
msgstr "..."

#: notebook/services/contents/filemanager.py:525
#, python-format
msgid "Serving notebooks from local directory: %s"
msgstr "notebooks : %s"

#: notebook/services/contents/manager.py:69
msgid "Untitled"
msgstr ""
